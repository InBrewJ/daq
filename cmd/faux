#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
INSTDIR=$ROOT/inst
IMAGE=daq/faux
local_config=system.conf
postfix=

# If the first argument is a number, then it's a port designation.
if [ $# -gt 0 -a $(($1)) -gt 0 ]; then
    postfix=-$1
    shift
fi

FAUX_ARGS="$*"

if [ -f $local_config ]; then
  echo Loading faux configuraiton from $local_config
  source $local_config
fi

CONTAINER=daq-faux$postfix

if [ -z "$FAUX_ARGS" ]; then
    FAUX_ARGS="$faux_args"
fi

echo Launching faux $FAUX_ARGS...

mkdir -p $INSTDIR

if docker container inspect $CONTAINER --format '{{ .Name }}' > /dev/null 2>&1; then
    echo -n "Clensing old container "
    docker rm -f $CONTAINER
fi

docker_args="\
        -v $INSTDIR/faux:/tmp \
        "

cid=$(docker run -d --privileged --name $CONTAINER --net=none $docker_args $IMAGE $FAUX_ARGS)
pid=$(docker inspect --format="{{ .State.Pid }}" $cid)

intf=faux$postfix
echo Removing old interface $intf
sudo ip link del $intf 2>/dev/null || true

echo Adding new interface...
sudo ip link add $intf type veth peer name faux-eth0 netns $pid
sudo ip link set $intf up

echo Done with faux device launch.
