#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
INSTDIR=$ROOT/inst/
IMAGE=daq/runner
SYSTEM_CONF=system.conf
LOCAL_CONFIG=local/$SYSTEM_CONF
docker_args="\
  --env MININET_LOGLEVEL=$MININET_LOGLEVEL\
  --env DAQ_LOGLEVEL=$DAQ_LOGLEVEL"

cd $ROOT

if [ "$1" == base -o "$1" == runner ]; then
    if [ "$1" == base ]; then
        IMAGE=daq/base
    fi
    build=y
    docker_args+=" -v $PWD:/daq/"
    shift
fi

if [ "$1" == live ]; then
    echo Mapping local daq live into runner process.
    docker_args+=" -v $PWD:/root/daq"
    shift
fi

if [ -f $LOCAL_CONFIG ]; then
    echo Loading dockrun configuration from $LOCAL_CONFIG
    source $LOCAL_CONFIG
fi

sudo rm -rf $INSTDIR
mkdir -p $INSTDIR

docker rm -f daq-runner > /dev/null 2>&1 || true

rm -f $INSTDIR/$SYSTEM_CONF
test -f $LOCAL_CONFIG && cp $LOCAL_CONFIG $INSTDIR/

docker_args+=" --env DAQ_CONTAINER=daq/runner"
if [ -z "$build" ]; then
    docker_args+=" -v $INSTDIR:/root/daq/inst"
fi

function move_intf {
    sleep 2
    intf=${daq_intf%!}
    if [ -n "$daq_intf" -a "$daq_intf" == "$intf" ]; then
        pid=$(docker inspect --format '{{.State.Pid}}' daq-runner)
        link=$(ip link show $intf 2>/dev/null )
        if [ "$pid" != 0 -a -n "$link" ]; then
            echo Moving interface $intf into container pid $pid...
            sudo ip link set $intf netns $pid
        else
            echo Could not find process/intf $pid/$intf, terminating daq-runner.
            docker kill daq-runner > /dev/null
        fi
    fi
}

if [ -z "$build" ]; then
    (
        move_result="$(move_intf)"
        # WTF I need to do \r\n is beyond me. But there it is.
        if [ -n "$move_result" ]; then
           printf "${move_result}\r\n"
        fi
    ) &
fi

echo Starting runner "$@"...
docker run --privileged --name daq-runner $docker_args -ti $IMAGE "$@"
