#!/bin/bash -e

ROOT=$(dirname $0)/..
cd $ROOT

local_config=system.conf
build_root=build
in_container=$DAQ_CONTAINER
build_args=

if [ -f $local_config ]; then
  echo Reading local configuraiton from $local_config
  source $local_config
fi

sudo rm -rf $build_root
mkdir -p $build_root

if [ -n "$in_container" ]; then
    service docker start
    echo Importing local copy of live docker files.
    rm -rf docker
    cp -a /daq/docker .
    sleep 2
fi

if [ -n "$faucet_git" ]; then
  build_args+=" --build-arg faucet_git=$faucet_git"
fi

if [ -n "$faucet_tag" ]; then
  build_args+=" --build-arg faucet_tag=$faucet_tag"
fi

declare -A modules

for file in docker/Dockerfile.*; do
    if [ ${file%\~} != ${file} ]; then
        continue
    fi
    module=${file#docker/Dockerfile.}
    if [ $module == base -a -n "$in_container" ]; then
        continue
    fi
    logfile=$build_root/docker_build.$module
    echo Building $file into daq/$module, log to $logfile...
    failed=
    tag=daq/$module
    docker build -t $tag $build_args -f $file . > $logfile 2>&1 || failed=y
    if [ -n "$failed" ]; then
        tail $logfile
        false
    fi
    echo Build complete. >> $logfile
    modules[$module]=$module
done

if [ -z "$in_container" ]; then
    images=$(docker images | fgrep daq/ | awk '{print $1}')
    if [ "${images#daq/runner}" != "${images}" ]; then
        echo Docker image daq/runner up-to-date.
    else
        echo
        echo You can stop this now if running direct with cmd/run and not cmd/dockrun.
        echo
        if [ "${images#*daq/runner*daq/base}" == "${images}" ]; then
            echo Runner build on top of base...
            cmd/dockrun base daq/cmd/build
        else
            echo Runner build inside existing runner...
            cmd/dockrun runner daq/cmd/build
        fi
        echo Committing runner container image to daq/runner...
        docker commit -c "CMD daq/cmd/run" daq-runner daq/runner > /dev/null
    fi
else
    service docker stop
    sleep 1
    rm -r /var/lib/docker/runtimes
fi
