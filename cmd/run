#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
INSTDIR=$ROOT/inst/
LOCALDIR=$ROOT/local/
IMAGE=daqf/runner
SYSTEM_CONF=system.conf
LOCAL_CONFIG=$LOCALDIR/$SYSTEM_CONF
DOCKER_STARTUP_TIMEOUT_MS=60000
pull_docker=y
docker_args=
build=
VERSION=$(cat $ROOT/misc/RELEASE_VERSION)

if [ -f $LOCAL_CONFIG ]; then
    echo Loading container configuration from $LOCAL_CONFIG
    source $LOCAL_CONFIG
fi

docker_args+="\
  --env MININET_LOGLEVEL=$MININET_LOGLEVEL\
  --env DOCKER_STARTUP_TIMEOUT_MS=$DOCKER_STARTUP_TIMEOUT_MS \
  --env DAQ_LOGLEVEL=$DAQ_LOGLEVEL"

cd $ROOT

if [ "$1" == latest ]; then
    pull_docker=n
    VERSION=latest
    shift
fi

if [ "$1" == base -o "$1" == rebuild ]; then
    if [ "$1" == base ]; then
        IMAGE=daq/base
        VERSION=latest
    fi
    build=y
    docker_args+=" -v $PWD:/daq/"
    shift
fi

if [ "$1" == live ]; then
    echo Mapping local daq live into runner process.
    docker_args+=" -v $PWD:/root/daq"
    shift
fi

if [ "$1" == bash ]; then
    docker_args+=" --entrypoint /bin/bash"
    shift
fi

mkdir -p $INSTDIR

sudo docker rm -f daq-runner > /dev/null 2>&1 || true

TARGET=$IMAGE:$VERSION

docker_args+=" --env DAQ_CONTAINER=$IMAGE"
if [ -z "$build" ]; then
    docker_args+=" -v $INSTDIR:/root/daq/inst"
    docker_args+=" -v $LOCALDIR:/root/daq/local"
    if [ $pull_docker = y ]; then
        sudo docker pull $TARGET
    fi
fi

function move_intf {
    sleep 2
    base=$1
    intf=${base%!}
    echo intf $base
    if [ -n "$base" -a "$base" == "$intf" ]; then
        pid=$(sudo docker inspect --format '{{.State.Pid}}' daq-runner)
        link=$(ip link show $intf 2>/dev/null )
        if [ "$pid" != 0 -a -n "$link" ]; then
            echo Moving interface $intf into container pid $pid...
            sudo ip link set $intf netns $pid
        else
            echo Could not find process/intf $pid/$intf, terminating daq-runner.
            sudo docker kill daq-runner > /dev/null
        fi
    fi
}

# This is necessary to wokr around a problem with docker permissions.
echo Configuring apparmor...
sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.tcpdump || true
hash -r

if [ -z "$build" ]; then
    if [ -n "$ext_dpid" ]; then
	intfs="$ext_intf $ext_ctrl"
    else
	intfs=$(echo $daq_intf | tr , ' ')
    fi
    (
        for intf in $intfs; do
            move_result="$(move_intf $intf)"
            # WTF I need to do \r\n is beyond me. But there it is.
            if [ -n "$move_result" ]; then
		printf "${move_result}\r\n"
            fi
	done
	if [ -n "$ext_dpid" ]; then
	    echo Activating physical switch in container...
	    sudo docker exec daq-runner daq/bin/physical_sec
	fi
    ) &
fi

echo Starting $TARGET "$@"...
sudo docker run --privileged --name daq-runner $docker_args $TARGET "$@"
